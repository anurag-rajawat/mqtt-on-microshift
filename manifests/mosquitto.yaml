apiVersion: v1
kind: Namespace
metadata:
  name: mosquitto
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: mosquitto
  name: mosquitto-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: "2Gi"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mosquitto-config
  namespace: mosquitto
data:
  mosquitto.conf: |
    # =================================================================
    # Listeners
    # =================================================================

    # listener port-number [ip address/host name/unix socket path] for plaintext communication
    listener 1883

    # Choose the protocol to use when listening.
    # This can be either mqtt or websockets.
    # Certificate based TLS may be used with websockets, except that only the
    # cafile, certfile, keyfile, ciphers, and ciphers_tls13 options are supported.
    #protocol mqtt

    # -----------------------------------------------------------------
    # Certificate based SSL/TLS support
    # -----------------------------------------------------------------
    # The following options can be used to enable certificate based SSL/TLS support
    # for this listener. Note that the recommended port for MQTT over TLS is 8883,
    # but this must be set manually.
    #
    # See also the mosquitto-tls man page and the "Pre-shared-key based SSL/TLS
    # support" section. Only one of certificate or PSK encryption support can be
    # enabled for any listener.

    # Both of certfile and keyfile must be defined to enable certificate based
    # TLS encryption.

    listener 8883
    # Path to the PEM encoded server certificate.
    certfile /mosquitto/config/server.crt

    # Path to the PEM encoded keyfile.
    keyfile /mosquitto/config/server.key

    # cafile and capath define methods of accessing the PEM encoded
    # Certificate Authority certificates that will be considered trusted when
    # checking incoming client certificates.
    # cafile defines the path to a file containing the CA certificates.
    # capath defines a directory that will be searched for files
    # containing the CA certificates. For capath to work correctly, the
    # certificate files must have ".crt" as the file ending and you must run
    # "openssl rehash <path to capath>" each time you add/remove a certificate.
    cafile /mosquitto/config/ca.crt
    #capath

    # =================================================================
    # Persistence
    # =================================================================

    # If persistence is enabled, save the in-memory database to disk
    # every autosave_interval seconds. If set to 0, the persistence
    # database will only be written when mosquitto exits. See also
    # autosave_on_changes.
    # Note that writing of the persistence database can be forced by
    # sending mosquitto a SIGUSR1 signal.
    autosave_interval 1800

    # If true, mosquitto will count the number of subscription changes, retained
    # messages received and queued messages and if the total exceeds
    # autosave_interval then the in-memory database will be saved to disk.
    # If false, mosquitto will save the in-memory database to disk by treating
    # autosave_interval as a time in seconds.
    #autosave_on_changes false

    # Save persistent message data to disk (true/false).
    # This saves information about all messages, including
    # subscriptions, currently in-flight messages and retained
    # messages.
    # retained_persistence is a synonym for this option.
    persistence true

    # The filename to use for the persistent database, not including
    # the path.
    persistence_file mosquitto.db

    # Location for persistent database.
    # Default is an empty string (current directory).
    # Set to e.g. /var/lib/mosquitto if running as a proper service on Linux or
    # similar.
    persistence_location /mosquitto/data

    # =================================================================
    # Security
    # =================================================================

    # Boolean value that determines whether clients that connect
    # without providing a username are allowed to connect. If set to
    # false then a password file should be created (see the
    # password_file option) to control authenticated client access.
    #
    # Defaults to false, unless there are no listeners defined in the configuration
    # file, in which case it is set to true, but connections are only allowed from
    # the local machine.
    #allow_anonymous false

    # -----------------------------------------------------------------
    # Default authentication and topic access control
    # -----------------------------------------------------------------

    # Control access to the broker using a password file. This file can be
    # generated using the mosquitto_passwd utility. If TLS support is not compiled
    # into mosquitto (it is recommended that TLS support should be included) then
    # plain text passwords are used, in which case the file should be a text file
    # with lines in the format:
    # username:password
    # The password (and colon) may be omitted if desired, although this
    # offers very little in the way of security.
    #
    # See the TLS client require_certificate and use_identity_as_username options
    # for alternative authentication options. If a plugin is used as well as
    # password_file, the plugin check will be made first.
    password_file /mosquitto/config/mosquitto.password
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mosquitto-password
  namespace: mosquitto
data:
  mosquitto.password: |
    admin:$7$101$OTc8MOzv0mSl/Z23$5OL1Ay0TVBDtLr6wKrSkweZTCfw00reFaRqe6KNtaMTNuW+3rxnEwZ0Nlu/elUFGwdlP9cpXIEOGg73s9HDsig==
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mosquitto-server-cert
  namespace: mosquitto
data:
  server.crt: |
    -----BEGIN CERTIFICATE-----
    MIIDCTCCAfECFHdsN+fH6cnM3y9PY3399HbaYx3mMA0GCSqGSIb3DQEBCwUAMDkx
    CzAJBgNVBAYTAklOMRcwFQYDVQQIDA5NYWRoeWEgUHJhZGVzaDERMA8GA1UECgwI
    QWNjdUtub3gwHhcNMjMxMTE3MTYwMTM3WhcNMzMxMTE0MTYwMTM3WjBJMQswCQYD
    VQQGEwJJTjEXMBUGA1UECAwOTWFkaHlhIFByYWRlc2gxITAfBgNVBAoMGEludGVy
    bmV0IFdpZGdpdHMgUHR5IEx0ZDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoC
    ggEBAL5YyVIXIe3elpOmu4/N/mesrQMK/atFTNEY6c78/2yMIm3ZRWEENrOTel6o
    AkYEqErTIurRnQejTg5rsofVxyG2ofnwVqLMdKuN2ZJiTG/hTsS6bwfnFOHs+XWz
    GL5MHjvN3HKqOVYcJ2Tx8LBT9chffioQS7+gL6C/kGDEsy59uFCnL17v6jfTQeC5
    +rbveO9Z2RxhEYC5lsNBNyJiRlfrbIauoSRRgcUfGxUkI2sRGC57dOGmemGY8wuv
    nOT3V3idQQ629seN0I3gUDdNTtML9mKoAPNwHKQKG7oQWnZxR1KVxSVLLQjjnA2l
    q0vitYii1CTpa1oBWekgMFWuCXMCAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAG0XV
    wj4NyUfGU/KlkyR+KeEP8nC23zgTjN1iRTWYgRo5PvK3miVio86eLisN15Xztue1
    hQ8noEtT3uUgmaroHRkg6lS0MicSyAXpJKuhqZf8tMpF/qJxJcAB/jRjmo0rAtTt
    SijHcbtrBYotuSQIxKK1vAOzBspM84bKQCFgeC68d6N4t0yBqKTXjfbrREMlEhW9
    jicnq3qPy4TCpfFLRkcRTfJmrLaE/3wBtYr1fQUzwf95SJ9C+11/mKjkLdn6gzV/
    j98CrMfz17+YbEDY8sMx+p666+n+eBawWrvRgTRzphQ4OhHwnF8/erTNAiH9sWAd
    H7FXo9WP083hN6K3pQ==
    -----END CERTIFICATE-----
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mosquitto-server-key
  namespace: mosquitto
data:
  server.key: |
    -----BEGIN PRIVATE KEY-----
    MIIEvAIBADANBgkqhkiG9w0BAQEFAASCBKYwggSiAgEAAoIBAQC+WMlSFyHt3paT
    pruPzf5nrK0DCv2rRUzRGOnO/P9sjCJt2UVhBDazk3peqAJGBKhK0yLq0Z0Ho04O
    a7KH1cchtqH58FaizHSrjdmSYkxv4U7Eum8H5xTh7Pl1sxi+TB47zdxyqjlWHCdk
    8fCwU/XIX34qEEu/oC+gv5BgxLMufbhQpy9e7+o300Hgufq273jvWdkcYRGAuZbD
    QTciYkZX62yGrqEkUYHFHxsVJCNrERgue3ThpnphmPMLr5zk91d4nUEOtvbHjdCN
    4FA3TU7TC/ZiqADzcBykChu6EFp2cUdSlcUlSy0I45wNpatL4rWIotQk6WtaAVnp
    IDBVrglzAgMBAAECggEAQ0EzwOGTh2yCX6El3GW4YgFNECot/vn5blgTJKOXzE6n
    S5DdRq4qdcDCF/fc9chnfiijybxOc4hr6AR9jCkotuzExn743YTIJGV2XpaE03MU
    VcZZvL0VT85fRgsFzxcuB4txPMKQh7Bi6vPhSywfR7EV7t7bJNYAfhexd7+IYABH
    xEGGwtgjVp84rDf106GJIMXIhQQVa1cWT77axJbxZH0WjoIQwL4XipW/YYCPwUZg
    UPQrZI2AxBgmlZlW0h6OrmzMMMN1iys4dPEBjrYtK7y6fUBYmYXHDl/lSVcNOntc
    T0bGgsdCLApo7ghCOHgm9/DQ6RaqGaVYmbLUVPgpAQKBgQDeUiS1GbUkahtRdkdU
    eeoBoQZmH2rAiK9h2z3kX0oOUzKzMxnZImNK6wGPuigmRwLsfFweGUu+CduDKwgW
    Ze3O1TVdpR6v06mNuAhK/TT/lBK4mO0VIdr1jAElhR9JT2ri6ziHudblPXPl2fCg
    6dzhLJytNdp6Vorn5f7hUtOyoQKBgQDbLqcl+sWxhP1Ut5BMsZjZUfbVnbOlqPc3
    neJk/NRRApJORR0gEPqMi99val/IlcUv534ljkgD65A2dVQ09QzMHCMYMjBUlpNA
    OXWZatSQJHa33M15TsrgNGSMgMc/vsmlEjQBZMHVwSBSp2DW5pLQmX6lpwaXrptv
    JfuymdIXkwKBgAS/zHjx66Szf5Hl7PApCo6uWeykjys9wEFe5ZuTTYmwzUx2sv6o
    dWaMTqQ7XdAzhCR5I56g+7U7kKzkpm+UDdh1RYaSmG05IE4euE6hyhgLmbrHyYjC
    CGNmcj/S8DAouifOzo5XsfeDsI4gcbt+Q3Gr+kzY8anbX2xExYUat9sBAoGAXABQ
    LvP9SY9uGsJWcqrVYtsxxebFQpMS+ihuoD80C7ENoocGO7CEyrvnlMfM3tBnDb2Y
    yMDZX7PgO8uyBeyaa46f+IcQnGD7/ChiQXyDLuHvZyvqn7HAHK5BSmy/tfUqhPyI
    EdGuP0Aqhic10d7E34SekX/zl3W2Tshdx1Ejy7sCgYAbl5sQ04+q/dl0huBy8XW9
    5LAAZAGaJToo6tGwax0fG8KboxUmZqYzAH5ESK/38/TfQAGUjC+wOYE2bFNTX/Ot
    rQVE6AU6Hdtb4KXql8kGZGBRlFXr6B4qP9Ck9etfTkOU/tXJlK3MNi4hAB6r9YXh
    EB85vLMnkUp7ihF3IK1Ujw==
    -----END PRIVATE KEY-----
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mosquitto-ca-cert
  namespace: mosquitto
data:
  ca.crt: |
    -----BEGIN CERTIFICATE-----
    MIIDUzCCAjugAwIBAgIUCjs74PsQnM/EzjaGwbtFbK+KrdQwDQYJKoZIhvcNAQEL
    BQAwOTELMAkGA1UEBhMCSU4xFzAVBgNVBAgMDk1hZGh5YSBQcmFkZXNoMREwDwYD
    VQQKDAhBY2N1S25veDAeFw0yMzExMTcxNTU3MzFaFw0zMzExMTQxNTU3MzFaMDkx
    CzAJBgNVBAYTAklOMRcwFQYDVQQIDA5NYWRoeWEgUHJhZGVzaDERMA8GA1UECgwI
    QWNjdUtub3gwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCtjORxq18f
    GTNGDumKAANv1n0Ig3rl3dfaqTfXm06AYlHn0/8ixZuh3kd98HW/yDtwstXOoyjr
    +ph+720e4kc3VZn5S1PVkwyQV06wkVxjIrR8QacYM1R4dIYd6lti2odlOoUIKu4O
    OP3lFXaU8AdJEGmyTEd8ZiPXIjUE8K1qfBGIIbwGHNue7XqealG3UpfNKMjUC/j/
    7WpGreu0qnLh7OGIKrNfVf80/frwHjiiGTqC7q66EIYbRRizVMFn2AXdSizlxJMK
    /ciuBz5XmT+2Odc8xCnYZcFCRdnRW1P8tZJB+nWcOmVq9/HmkkKsL8nnU0UGACNz
    M+rrUtMc8wXNAgMBAAGjUzBRMB0GA1UdDgQWBBSoexhBvw5nFlUrneMspBZQ/zVK
    JzAfBgNVHSMEGDAWgBSoexhBvw5nFlUrneMspBZQ/zVKJzAPBgNVHRMBAf8EBTAD
    AQH/MA0GCSqGSIb3DQEBCwUAA4IBAQA2a8nn6PY7nrBwhAy42kL0NGAexRQk+VZ4
    gKTnRHy4RROvQwYW4zlyqSuSqEi0qMJ7RAy3Kd4+S1CRkxgvmqFnJPBbYlfmjphs
    4n9vHDJ5w481W1ZOLuWaijemT1GKzOE7tEw9VkWTTRo62OKhnzihFRDayICkJd4L
    z4UaJPwacdOrpiVtpE3FEXxlCj/1kQ+W7UGF18ZC4L004VE5+Xf1ohtA5lG5sEcx
    lZ4ZmKGMtMZn6UH7gCQtFD384iCLrLFy/tKtwg3iCDRW0tHvjRfE1311HWMYIlsJ
    bGqveM8ytRP5aaeTKCnQUoEJKuYinMPtxtVc97l+84M4G6A+f2my
    -----END CERTIFICATE-----
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mosquitto
  namespace: mosquitto
  labels:
    app: mosquitto
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mosquitto
  template:
    metadata:
      labels:
        app: mosquitto
    spec:
      containers:
        - name: mosquitto
          image: eclipse-mosquitto:2.0.18
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 1883
            - containerPort: 8883
          resources:
            limits:
              memory: "128Mi"
              cpu: "500m"
          securityContext:
            privileged: false
            allowPrivilegeEscalation: false
          volumeMounts:
            - name: mosquitto-password
              mountPath: /mosquitto/config/mosquitto.password
              subPath: mosquitto.password

            - name: mosquitto-config
              mountPath: /mosquitto/config/mosquitto.conf
              subPath: mosquitto.conf

            - name: mosquitto-persistent-storage
              mountPath: /mosquitto/data

            - name: mosquitto-server-cert
              mountPath: /mosquitto/config/server.crt
              subPath: server.crt

            - name: mosquitto-server-key
              mountPath: /mosquitto/config/server.key
              subPath: server.key

            - name: mosquitto-ca-cert
              mountPath: /mosquitto/config/ca.crt
              subPath: ca.crt

      volumes:
        - name: mosquitto-password
          configMap:
            name: mosquitto-password

        - name: mosquitto-config
          configMap:
            name: mosquitto-config

        - name: mosquitto-persistent-storage
          persistentVolumeClaim:
            claimName: mosquitto-pvc

        - name: mosquitto-server-cert
          configMap:
            name: mosquitto-server-cert

        - name: mosquitto-server-key
          configMap:
            name: mosquitto-server-key

        - name: mosquitto-ca-cert
          configMap:
            name: mosquitto-ca-cert
---
apiVersion: v1
kind: Service
metadata:
  name: mosquitto-tcp
  namespace: mosquitto
spec:
  selector:
    app: mosquitto
  type: ClusterIP
  ports:
    - port: 1883
      targetPort: 1883
      protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: mosquitto-tls
  namespace: mosquitto
spec:
  selector:
    app: mosquitto
  type: ClusterIP
  ports:
    - port: 8883
      targetPort: 8883
      protocol: TCP
